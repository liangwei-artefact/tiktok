Subject: [PATCH] - leave fix
- type fix
- detail page
---
Index: .eslintrc.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.eslintrc.json b/.eslintrc.json
--- a/.eslintrc.json	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/.eslintrc.json	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -1,3 +1,7 @@
 {
-  "extends": "next/core-web-vitals"
+  "extends": "next/core-web-vitals",
+  "rules": {
+    "@next/next/no-assign-module-variable": "off",
+    "react-hooks/rules-of-hooks": "off"
+  }
 }
Index: public/ADS.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/ADS.svg b/public/ADS.svg
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/public/ADS.svg	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,4 @@
+<svg width="27" height="28" viewBox="0 0 27 28" fill="none" xmlns="http://www.w3.org/2000/svg">
+<path d="M6.7487 26.1802H20.2453C20.7094 26.1802 21.0925 25.8006 21.0925 25.3365C21.0925 24.8724 20.7094 24.4927 20.2453 24.4927H6.7487C6.28464 24.4927 5.90495 24.8724 5.90495 25.3365C5.90495 25.8006 6.28464 26.1802 6.7487 26.1802ZM14.388 22.8238H25.0345C25.4565 22.83 25.8653 22.6763 26.1786 22.3935C26.328 22.2548 26.448 22.0873 26.5312 21.9012C26.6144 21.715 26.6592 21.514 26.6629 21.3101V3.32136C26.6601 3.11629 26.6143 2.91409 26.5286 2.72778C26.4428 2.54148 26.319 2.3752 26.1651 2.23968C25.8679 1.96658 25.4785 1.81588 25.075 1.8178H1.97645C1.55337 1.80837 1.14233 1.95904 0.825578 2.23968C0.673076 2.3765 0.5509 2.54372 0.466908 2.7306C0.382916 2.91747 0.338968 3.11986 0.337891 3.32474V21.3236C0.343133 21.5275 0.389995 21.7282 0.4756 21.9133C0.561206 22.0985 0.683748 22.2642 0.835703 22.4002C1.13235 22.6733 1.52098 22.8245 1.92414 22.8238H14.388ZM24.2363 21.1886H2.7797C2.69092 21.1877 2.60317 21.1693 2.52151 21.1345C2.43984 21.0997 2.36585 21.049 2.30377 20.9856C2.24169 20.9221 2.19275 20.847 2.15975 20.7645C2.12675 20.6821 2.11034 20.594 2.11145 20.5052V4.17355C2.11145 3.80061 2.4152 3.5053 2.7797 3.5053H24.2363C24.5957 3.5053 24.886 3.80061 24.886 4.17355V20.5052C24.89 20.6819 24.824 20.8529 24.7022 20.981C24.5805 21.1091 24.4129 21.1838 24.2363 21.1886Z" fill="#8785FF"/>
+<path d="M5.52128 16.9933H6.95903C7.02146 16.9933 7.09065 16.9579 7.1109 16.887L7.84328 14.9362C7.85622 14.9055 7.87774 14.8791 7.90527 14.8603C7.9328 14.8414 7.96517 14.8309 7.99853 14.8299H10.7711C10.8369 14.8299 10.8993 14.8687 10.9263 14.9362L11.6587 16.887C11.6697 16.9177 11.6898 16.9444 11.7163 16.9634C11.7429 16.9824 11.7746 16.9928 11.8072 16.9933H13.2483C13.2744 16.9932 13.3001 16.9867 13.323 16.9743C13.346 16.962 13.3655 16.9441 13.38 16.9224C13.3963 16.8998 13.4072 16.8738 13.4119 16.8462C13.4166 16.8187 13.4149 16.7905 13.407 16.7638L10.1906 8.6638C10.1766 8.63423 10.1547 8.60912 10.1273 8.59125C10.0999 8.57338 10.068 8.56345 10.0353 8.56255H8.74272C8.70964 8.56175 8.67709 8.57101 8.64938 8.58908C8.62166 8.60716 8.60008 8.63321 8.58747 8.6638L5.37446 16.7638C5.35421 16.8144 5.35421 16.8802 5.38459 16.9224C5.41834 16.9663 5.47403 16.995 5.52971 16.9933H5.52128ZM8.4879 13.1998L9.36203 10.9993C9.3789 10.974 9.41096 10.947 9.43796 10.947C9.4734 10.947 9.50715 10.9757 9.51728 10.9993L10.3948 13.2049C10.3996 13.2303 10.3973 13.2566 10.388 13.2808C10.3644 13.3027 10.3458 13.3213 10.3155 13.3213H8.56553C8.54528 13.3213 8.51321 13.301 8.49296 13.2808C8.48342 13.2549 8.48166 13.2267 8.4879 13.1998ZM14.6642 16.9933H17.4857C18.8795 16.9933 19.941 16.6237 20.6767 15.861C21.3787 15.132 21.7247 14.1077 21.7247 12.7796C21.7247 11.4532 21.3787 10.4222 20.7054 9.71005C19.9663 8.94223 18.9065 8.56423 17.5076 8.56423H14.6625C14.5832 8.56423 14.4937 8.60136 14.4279 8.65705C14.3736 8.72678 14.3423 8.81172 14.3385 8.90005V16.6609C14.338 16.7041 14.3461 16.747 14.3622 16.787C14.3783 16.8271 14.4022 16.8637 14.4325 16.8945C14.4627 16.9254 14.4987 16.95 14.5385 16.967C14.5782 16.9839 14.6209 16.9929 14.6642 16.9933ZM17.3186 9.91761C18.3108 9.91761 19.0398 10.1336 19.5005 10.5892C19.9359 11.0381 20.1637 11.7401 20.1637 12.7189C20.1637 13.6689 19.9359 14.3777 19.482 14.8316C19.0213 15.2923 18.2889 15.5269 17.3034 15.5269H16.0547C16.0327 15.5281 16.0107 15.5245 15.9903 15.5164C15.9699 15.5082 15.9516 15.4956 15.9365 15.4796C15.9028 15.4459 15.891 15.4121 15.891 15.3598V10.083C15.891 9.99186 15.9602 9.91761 16.0563 9.91761H17.3186Z" fill="#8785FF"/>
+</svg>
Index: public/Create Next App.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/Create Next App.html b/public/Create Next App.html
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/public/Create Next App.html	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,969 @@
+<!DOCTYPE html>
+<!-- saved from url=(0032)http://localhost:3000/accounts/1 -->
+<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" href="./Create Next App_files/layout.css" data-precedence="next_static/css/app/layout.css"></head><body><style data-emotion="css-global o6gwfi">html{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;box-sizing:border-box;-webkit-text-size-adjust:100%;}*,*::before,*::after{box-sizing:inherit;}strong,b{font-weight:700;}body{margin:0;color:rgba(0, 0, 0, 0.87);font-family:"Roboto","Helvetica","Arial",sans-serif;font-weight:400;font-size:1rem;line-height:1.5;letter-spacing:0.00938em;background-color:#fff;}@media print{body{background-color:#fff;}}body::backdrop{background-color:#fff;}</style><style data-emotion="css k008qs">.css-k008qs{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}</style><nextjs-portal><template shadowrootmode="open"><style>
+        :host {
+          all: initial;
+
+          /* the direction property is not reset by 'all' */
+          direction: ltr;
+        }
+
+        /*!
+         * Bootstrap Reboot v4.4.1 (https://getbootstrap.com/)
+         * Copyright 2011-2019 The Bootstrap Authors
+         * Copyright 2011-2019 Twitter, Inc.
+         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
+         * Forked from Normalize.css, licensed MIT (https://github.com/necolas/normalize.css/blob/master/LICENSE.md)
+         */
+        *,
+        *::before,
+        *::after {
+          box-sizing: border-box;
+        }
+
+        :host {
+          font-family: sans-serif;
+          line-height: 1.15;
+          -webkit-text-size-adjust: 100%;
+          -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
+        }
+
+        article,
+        aside,
+        figcaption,
+        figure,
+        footer,
+        header,
+        hgroup,
+        main,
+        nav,
+        section {
+          display: block;
+        }
+
+        :host {
+          margin: 0;
+          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
+            'Helvetica Neue', Arial, 'Noto Sans', sans-serif,
+            'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
+            'Noto Color Emoji';
+          font-size: 16px;
+          font-weight: 400;
+          line-height: 1.5;
+          color: #212529;
+          text-align: left;
+          background-color: #fff;
+        }
+
+        [tabindex='-1']:focus:not(:focus-visible) {
+          outline: 0 !important;
+        }
+
+        hr {
+          box-sizing: content-box;
+          height: 0;
+          overflow: visible;
+        }
+
+        h1,
+        h2,
+        h3,
+        h4,
+        h5,
+        h6 {
+          margin-top: 0;
+          margin-bottom: 8px;
+        }
+
+        p {
+          margin-top: 0;
+          margin-bottom: 16px;
+        }
+
+        abbr[title],
+        abbr[data-original-title] {
+          text-decoration: underline;
+          -webkit-text-decoration: underline dotted;
+          text-decoration: underline dotted;
+          cursor: help;
+          border-bottom: 0;
+          -webkit-text-decoration-skip-ink: none;
+          text-decoration-skip-ink: none;
+        }
+
+        address {
+          margin-bottom: 16px;
+          font-style: normal;
+          line-height: inherit;
+        }
+
+        ol,
+        ul,
+        dl {
+          margin-top: 0;
+          margin-bottom: 16px;
+        }
+
+        ol ol,
+        ul ul,
+        ol ul,
+        ul ol {
+          margin-bottom: 0;
+        }
+
+        dt {
+          font-weight: 700;
+        }
+
+        dd {
+          margin-bottom: 8px;
+          margin-left: 0;
+        }
+
+        blockquote {
+          margin: 0 0 16px;
+        }
+
+        b,
+        strong {
+          font-weight: bolder;
+        }
+
+        small {
+          font-size: 80%;
+        }
+
+        sub,
+        sup {
+          position: relative;
+          font-size: 75%;
+          line-height: 0;
+          vertical-align: baseline;
+        }
+
+        sub {
+          bottom: -0.25em;
+        }
+
+        sup {
+          top: -0.5em;
+        }
+
+        a {
+          color: #007bff;
+          text-decoration: none;
+          background-color: transparent;
+        }
+
+        a:hover {
+          color: #0056b3;
+          text-decoration: underline;
+        }
+
+        a:not([href]) {
+          color: inherit;
+          text-decoration: none;
+        }
+
+        a:not([href]):hover {
+          color: inherit;
+          text-decoration: none;
+        }
+
+        pre,
+        code,
+        kbd,
+        samp {
+          font-family: SFMono-Regular, Menlo, Monaco, Consolas,
+            'Liberation Mono', 'Courier New', monospace;
+          font-size: 1em;
+        }
+
+        pre {
+          margin-top: 0;
+          margin-bottom: 16px;
+          overflow: auto;
+        }
+
+        figure {
+          margin: 0 0 16px;
+        }
+
+        img {
+          vertical-align: middle;
+          border-style: none;
+        }
+
+        svg {
+          overflow: hidden;
+          vertical-align: middle;
+        }
+
+        table {
+          border-collapse: collapse;
+        }
+
+        caption {
+          padding-top: 12px;
+          padding-bottom: 12px;
+          color: #6c757d;
+          text-align: left;
+          caption-side: bottom;
+        }
+
+        th {
+          text-align: inherit;
+        }
+
+        label {
+          display: inline-block;
+          margin-bottom: 8px;
+        }
+
+        button {
+          border-radius: 0;
+        }
+
+        button:focus {
+          outline: 1px dotted;
+          outline: 5px auto -webkit-focus-ring-color;
+        }
+
+        input,
+        button,
+        select,
+        optgroup,
+        textarea {
+          margin: 0;
+          font-family: inherit;
+          font-size: inherit;
+          line-height: inherit;
+        }
+
+        button,
+        input {
+          overflow: visible;
+        }
+
+        button,
+        select {
+          text-transform: none;
+        }
+
+        select {
+          word-wrap: normal;
+        }
+
+        button,
+        [type='button'],
+        [type='reset'],
+        [type='submit'] {
+          -webkit-appearance: button;
+        }
+
+        button:not(:disabled),
+        [type='button']:not(:disabled),
+        [type='reset']:not(:disabled),
+        [type='submit']:not(:disabled) {
+          cursor: pointer;
+        }
+
+        button::-moz-focus-inner,
+        [type='button']::-moz-focus-inner,
+        [type='reset']::-moz-focus-inner,
+        [type='submit']::-moz-focus-inner {
+          padding: 0;
+          border-style: none;
+        }
+
+        input[type='radio'],
+        input[type='checkbox'] {
+          box-sizing: border-box;
+          padding: 0;
+        }
+
+        input[type='date'],
+        input[type='time'],
+        input[type='datetime-local'],
+        input[type='month'] {
+          -webkit-appearance: listbox;
+        }
+
+        textarea {
+          overflow: auto;
+          resize: vertical;
+        }
+
+        fieldset {
+          min-width: 0;
+          padding: 0;
+          margin: 0;
+          border: 0;
+        }
+
+        legend {
+          display: block;
+          width: 100%;
+          max-width: 100%;
+          padding: 0;
+          margin-bottom: 8px;
+          font-size: 24px;
+          line-height: inherit;
+          color: inherit;
+          white-space: normal;
+        }
+
+        progress {
+          vertical-align: baseline;
+        }
+
+        [type='number']::-webkit-inner-spin-button,
+        [type='number']::-webkit-outer-spin-button {
+          height: auto;
+        }
+
+        [type='search'] {
+          outline-offset: -2px;
+          -webkit-appearance: none;
+        }
+
+        [type='search']::-webkit-search-decoration {
+          -webkit-appearance: none;
+        }
+
+        ::-webkit-file-upload-button {
+          font: inherit;
+          -webkit-appearance: button;
+        }
+
+        output {
+          display: inline-block;
+        }
+
+        summary {
+          display: list-item;
+          cursor: pointer;
+        }
+
+        template {
+          display: none;
+        }
+
+        [hidden] {
+          display: none !important;
+        }
+      </style><style>
+        :host {
+          --size-gap-half: 4px;
+          --size-gap: 8px;
+          --size-gap-double: 16px;
+          --size-gap-triple: 24px;
+          --size-gap-quad: 32px;
+
+          --size-font-small: 14px;
+          --size-font: 16px;
+          --size-font-big: 20px;
+          --size-font-bigger: 24px;
+
+          --color-accents-1: #808080;
+          --color-accents-2: #222222;
+          --color-accents-3: #404040;
+
+          --font-stack-monospace: 'SFMono-Regular', Consolas, 'Liberation Mono',
+            Menlo, Courier, monospace;
+
+          --color-ansi-selection: rgba(95, 126, 151, 0.48);
+          --color-ansi-bg: #111111;
+          --color-ansi-fg: #cccccc;
+
+          --color-ansi-white: #777777;
+          --color-ansi-black: #141414;
+          --color-ansi-blue: #00aaff;
+          --color-ansi-cyan: #88ddff;
+          --color-ansi-green: #98ec65;
+          --color-ansi-magenta: #aa88ff;
+          --color-ansi-red: #ff5555;
+          --color-ansi-yellow: #ffcc33;
+          --color-ansi-bright-white: #ffffff;
+          --color-ansi-bright-black: #777777;
+          --color-ansi-bright-blue: #33bbff;
+          --color-ansi-bright-cyan: #bbecff;
+          --color-ansi-bright-green: #b6f292;
+          --color-ansi-bright-magenta: #cebbff;
+          --color-ansi-bright-red: #ff8888;
+          --color-ansi-bright-yellow: #ffd966;
+        }
+
+        .mono {
+          font-family: var(--font-stack-monospace);
+        }
+
+        h1,
+        h2,
+        h3,
+        h4,
+        h5,
+        h6 {
+          margin-bottom: var(--size-gap);
+          font-weight: 500;
+          line-height: 1.5;
+        }
+
+        h1 {
+          font-size: 40px;
+        }
+        h2 {
+          font-size: 32px;
+        }
+        h3 {
+          font-size: 28px;
+        }
+        h4 {
+          font-size: 24px;
+        }
+        h5 {
+          font-size: 20px;
+        }
+        h6 {
+          font-size: 16px;
+        }
+      </style><style>
+        
+  [data-nextjs-dialog-overlay] {
+    position: fixed;
+    top: 0;
+    right: 0;
+    bottom: 0;
+    left: 0;
+    overflow: auto;
+    z-index: 9000;
+
+    display: flex;
+    align-content: center;
+    align-items: center;
+    flex-direction: column;
+    padding: 10vh 15px 0;
+  }
+
+  @media (max-height: 812px) {
+    [data-nextjs-dialog-overlay] {
+      padding: 15px 15px 0;
+    }
+  }
+
+  [data-nextjs-dialog-backdrop] {
+    position: fixed;
+    top: 0;
+    right: 0;
+    bottom: 0;
+    left: 0;
+    background-color: rgba(17, 17, 17, 0.2);
+    pointer-events: all;
+    z-index: -1;
+  }
+
+  [data-nextjs-dialog-backdrop-fixed] {
+    cursor: not-allowed;
+    -webkit-backdrop-filter: blur(8px);
+    backdrop-filter: blur(8px);
+  }
+
+        
+  [data-nextjs-toast] {
+    position: fixed;
+    bottom: var(--size-gap-double);
+    left: var(--size-gap-double);
+    max-width: 420px;
+    z-index: 9000;
+  }
+
+  @media (max-width: 440px) {
+    [data-nextjs-toast] {
+      max-width: 90vw;
+      left: 5vw;
+    }
+  }
+
+  [data-nextjs-toast-wrapper] {
+    padding: 16px;
+    border-radius: var(--size-gap-half);
+    font-weight: 500;
+    color: var(--color-ansi-bright-white);
+    background-color: var(--color-ansi-red);
+    box-shadow: 0px var(--size-gap-double) var(--size-gap-quad)
+      rgba(0, 0, 0, 0.25);
+  }
+
+        
+  [data-nextjs-dialog] {
+    display: flex;
+    flex-direction: column;
+    width: 100%;
+    margin-right: auto;
+    margin-left: auto;
+    outline: none;
+    background: white;
+    border-radius: var(--size-gap);
+    box-shadow: 0 var(--size-gap-half) var(--size-gap-double)
+      rgba(0, 0, 0, 0.25);
+    max-height: calc(100% - 56px);
+    overflow-y: hidden;
+  }
+
+  @media (max-height: 812px) {
+    [data-nextjs-dialog-overlay] {
+      max-height: calc(100% - 15px);
+    }
+  }
+
+  @media (min-width: 576px) {
+    [data-nextjs-dialog] {
+      max-width: 540px;
+      box-shadow: 0 var(--size-gap) var(--size-gap-quad) rgba(0, 0, 0, 0.25);
+    }
+  }
+
+  @media (min-width: 768px) {
+    [data-nextjs-dialog] {
+      max-width: 720px;
+    }
+  }
+
+  @media (min-width: 992px) {
+    [data-nextjs-dialog] {
+      max-width: 960px;
+    }
+  }
+
+  [data-nextjs-dialog-banner] {
+    position: relative;
+  }
+  [data-nextjs-dialog-banner].banner-warning {
+    border-color: var(--color-ansi-yellow);
+  }
+  [data-nextjs-dialog-banner].banner-error {
+    border-color: var(--color-ansi-red);
+  }
+
+  [data-nextjs-dialog-banner]::after {
+    z-index: 2;
+    content: '';
+    position: absolute;
+    top: 0;
+    right: 0;
+    width: 100%;
+    /* banner width: */
+    border-top-width: var(--size-gap-half);
+    border-bottom-width: 0;
+    border-top-style: solid;
+    border-bottom-style: solid;
+    border-top-color: inherit;
+    border-bottom-color: transparent;
+  }
+
+  [data-nextjs-dialog-content] {
+    overflow-y: auto;
+    border: none;
+    margin: 0;
+    /* calc(padding + banner width offset) */
+    padding: calc(var(--size-gap-double) + var(--size-gap-half))
+      var(--size-gap-double);
+    height: 100%;
+    display: flex;
+    flex-direction: column;
+  }
+  [data-nextjs-dialog-content] > [data-nextjs-dialog-header] {
+    flex-shrink: 0;
+    margin-bottom: var(--size-gap-double);
+  }
+  [data-nextjs-dialog-content] > [data-nextjs-dialog-body] {
+    position: relative;
+    flex: 1 1 auto;
+  }
+
+        
+  [data-nextjs-dialog-left-right] {
+    display: flex;
+    flex-direction: row;
+    align-content: center;
+    align-items: center;
+    justify-content: space-between;
+  }
+  [data-nextjs-dialog-left-right] > nav {
+    flex: 1;
+    display: flex;
+    align-items: center;
+    margin-right: var(--size-gap);
+  }
+  [data-nextjs-dialog-left-right] > nav > button {
+    display: inline-flex;
+    align-items: center;
+    justify-content: center;
+
+    width: calc(var(--size-gap-double) + var(--size-gap));
+    height: calc(var(--size-gap-double) + var(--size-gap));
+    font-size: 0;
+    border: none;
+    background-color: rgba(255, 85, 85, 0.1);
+    color: var(--color-ansi-red);
+    cursor: pointer;
+    transition: background-color 0.25s ease;
+  }
+  [data-nextjs-dialog-left-right] > nav > button > svg {
+    width: auto;
+    height: calc(var(--size-gap) + var(--size-gap-half));
+  }
+  [data-nextjs-dialog-left-right] > nav > button:hover {
+    background-color: rgba(255, 85, 85, 0.2);
+  }
+  [data-nextjs-dialog-left-right] > nav > button:disabled {
+    background-color: rgba(255, 85, 85, 0.1);
+    color: rgba(255, 85, 85, 0.4);
+    cursor: not-allowed;
+  }
+
+  [data-nextjs-dialog-left-right] > nav > button:first-of-type {
+    border-radius: var(--size-gap-half) 0 0 var(--size-gap-half);
+    margin-right: 1px;
+  }
+  [data-nextjs-dialog-left-right] > nav > button:last-of-type {
+    border-radius: 0 var(--size-gap-half) var(--size-gap-half) 0;
+  }
+
+  [data-nextjs-dialog-left-right] > button:last-of-type {
+    border: 0;
+    padding: 0;
+
+    background-color: transparent;
+    appearance: none;
+
+    opacity: 0.4;
+    transition: opacity 0.25s ease;
+  }
+  [data-nextjs-dialog-left-right] > button:last-of-type:hover {
+    opacity: 0.7;
+  }
+
+        
+  [data-nextjs-codeframe] {
+    overflow: auto;
+    border-radius: var(--size-gap-half);
+    background-color: var(--color-ansi-bg);
+    color: var(--color-ansi-fg);
+  }
+  [data-nextjs-codeframe]::selection,
+  [data-nextjs-codeframe] *::selection {
+    background-color: var(--color-ansi-selection);
+  }
+  [data-nextjs-codeframe] * {
+    color: inherit;
+    background-color: transparent;
+    font-family: var(--font-stack-monospace);
+  }
+
+  [data-nextjs-codeframe] > * {
+    margin: 0;
+    padding: calc(var(--size-gap) + var(--size-gap-half))
+      calc(var(--size-gap-double) + var(--size-gap-half));
+  }
+  [data-nextjs-codeframe] > div {
+    display: inline-block;
+    width: auto;
+    min-width: 100%;
+    border-bottom: 1px solid var(--color-ansi-bright-black);
+  }
+  [data-nextjs-codeframe] > div > p {
+    display: flex;
+    align-items: center;
+    justify-content: space-between;
+    cursor: pointer;
+    margin: 0;
+  }
+  [data-nextjs-codeframe] > div > p:hover {
+    text-decoration: underline dotted;
+  }
+  [data-nextjs-codeframe] div > p > svg {
+    width: auto;
+    height: 1em;
+    margin-left: 8px;
+  }
+  [data-nextjs-codeframe] div > pre {
+    overflow: hidden;
+    display: inline-block;
+  }
+
+        
+  [data-nextjs-terminal] {
+    border-radius: var(--size-gap-half);
+    background-color: var(--color-ansi-bg);
+    color: var(--color-ansi-fg);
+  }
+  [data-nextjs-terminal]::selection,
+  [data-nextjs-terminal] *::selection {
+    background-color: var(--color-ansi-selection);
+  }
+  [data-nextjs-terminal] * {
+    color: inherit;
+    background-color: transparent;
+    font-family: var(--font-stack-monospace);
+  }
+  [data-nextjs-terminal] > * {
+    margin: 0;
+    padding: calc(var(--size-gap) + var(--size-gap-half))
+      calc(var(--size-gap-double) + var(--size-gap-half));
+  }
+
+  [data-nextjs-terminal] pre {
+    white-space: pre-wrap;
+    word-break: break-word;
+  }
+
+  [data-with-open-in-editor-link] svg {
+    width: auto;
+    height: var(--size-font-small);
+    margin-left: var(--size-gap);
+  }
+  [data-with-open-in-editor-link] {
+    cursor: pointer;
+  }
+  [data-with-open-in-editor-link]:hover {
+    text-decoration: underline dotted;
+  }
+  [data-with-open-in-editor-link-source-file] {
+    border-bottom: 1px solid var(--color-ansi-bright-black);
+    display: flex;
+    align-items: center;
+    justify-content: space-between;
+  }
+  [data-with-open-in-editor-link-import-trace] {
+    margin-left: var(--size-gap-double);
+  }
+  [data-nextjs-terminal] a {
+    color: inherit;
+  }
+
+        
+        
+  .nextjs-container-build-error-header {
+    display: flex;
+    align-items: center;
+  }
+  .nextjs-container-build-error-header > h4 {
+    line-height: 1.5;
+    margin: 0;
+    padding: 0;
+  }
+
+  .nextjs-container-build-error-body footer {
+    margin-top: var(--size-gap);
+  }
+  .nextjs-container-build-error-body footer p {
+    margin: 0;
+  }
+
+  .nextjs-container-build-error-body small {
+    color: #757575;
+  }
+
+        
+  .nextjs-container-root-layout-error-header > h4 {
+    line-height: 1.5;
+    margin: 0;
+    padding: 0;
+  }
+
+  .nextjs-container-root-layout-error-body footer {
+    margin-top: var(--size-gap);
+  }
+  .nextjs-container-root-layout-error-body footer p {
+    margin: 0;
+  }
+
+  .nextjs-container-root-layout-error-body small {
+    color: #757575;
+  }
+
+        
+  .nextjs-container-errors-header > h1 {
+    font-size: var(--size-font-big);
+    line-height: var(--size-font-bigger);
+    font-weight: bold;
+    margin: 0;
+    margin-top: calc(var(--size-gap-double) + var(--size-gap-half));
+  }
+  .nextjs-container-errors-header small {
+    font-size: var(--size-font-small);
+    color: var(--color-accents-1);
+    margin-left: var(--size-gap-double);
+  }
+  .nextjs-container-errors-header small > span {
+    font-family: var(--font-stack-monospace);
+  }
+  .nextjs-container-errors-header > p {
+    font-family: var(--font-stack-monospace);
+    font-size: var(--size-font-small);
+    line-height: var(--size-font-big);
+    font-weight: bold;
+    margin: 0;
+    margin-top: var(--size-gap-half);
+    color: var(--color-ansi-red);
+    white-space: pre-wrap;
+  }
+  .nextjs-container-errors-header > div > small {
+    margin: 0;
+    margin-top: var(--size-gap-half);
+  }
+  .nextjs-container-errors-header > p > a {
+    color: var(--color-ansi-red);
+  }
+
+  .nextjs-container-errors-body > h5:not(:first-child) {
+    margin-top: calc(var(--size-gap-double) + var(--size-gap));
+  }
+  .nextjs-container-errors-body > h5 {
+    margin-bottom: var(--size-gap);
+  }
+
+  .nextjs-toast-errors-parent {
+    cursor: pointer;
+    transition: transform 0.2s ease;
+  }
+  .nextjs-toast-errors-parent:hover {
+    transform: scale(1.1);
+  }
+  .nextjs-toast-errors {
+    display: flex;
+    align-items: center;
+    justify-content: flex-start;
+  }
+  .nextjs-toast-errors > svg {
+    margin-right: var(--size-gap);
+  }
+  .nextjs-toast-errors-hide-button {
+    margin-left: var(--size-gap-triple);
+    border: none;
+    background: none;
+    color: var(--color-ansi-bright-white);
+    padding: 0;
+    transition: opacity 0.25s ease;
+    opacity: 0.7;
+  }
+  .nextjs-toast-errors-hide-button:hover {
+    opacity: 1;
+  }
+
+        
+  button[data-nextjs-data-runtime-error-collapsed-action] {
+    background: none;
+    border: none;
+    padding: 0;
+    font-size: var(--size-font-small);
+    line-height: var(--size-font-bigger);
+    color: var(--color-accents-3);
+  }
+
+  [data-nextjs-call-stack-frame]:not(:last-child),
+  [data-nextjs-component-stack-frame]:not(:last-child) {
+    margin-bottom: var(--size-gap-double);
+  }
+
+  [data-nextjs-call-stack-frame] > h6,
+  [data-nextjs-component-stack-frame] > h6 {
+    margin-top: 0;
+    margin-bottom: var(--size-gap);
+    font-family: var(--font-stack-monospace);
+    color: #222;
+  }
+  [data-nextjs-call-stack-frame] > h6[data-nextjs-frame-expanded='false'] {
+    color: #666;
+  }
+  [data-nextjs-call-stack-frame] > div,
+  [data-nextjs-component-stack-frame] > div {
+    display: flex;
+    align-items: center;
+    padding-left: calc(var(--size-gap) + var(--size-gap-half));
+    font-size: var(--size-font-small);
+    color: #999;
+  }
+  [data-nextjs-call-stack-frame] > div > svg,
+  [data-nextjs-component-stack-frame] > div > svg {
+    width: auto;
+    height: var(--size-font-small);
+    margin-left: var(--size-gap);
+
+    display: none;
+  }
+
+  [data-nextjs-call-stack-frame] > div[data-has-source],
+  [data-nextjs-component-stack-frame] > div {
+    cursor: pointer;
+  }
+  [data-nextjs-call-stack-frame] > div[data-has-source]:hover,
+  [data-nextjs-component-stack-frame] > div:hover {
+    text-decoration: underline dotted;
+  }
+  [data-nextjs-call-stack-frame] > div[data-has-source] > svg,
+  [data-nextjs-component-stack-frame] > div > svg {
+    display: unset;
+  }
+
+  [data-nextjs-call-stack-framework-icon] {
+    margin-right: var(--size-gap);
+  }
+  [data-nextjs-call-stack-framework-icon='next'] > mask {
+    mask-type: alpha;
+  }
+  [data-nextjs-call-stack-framework-icon='react'] {
+    color: rgb(20, 158, 202);
+  }
+  [data-nextjs-collapsed-call-stack-details][open]
+    [data-nextjs-call-stack-chevron-icon] {
+    transform: rotate(90deg);
+  }
+  [data-nextjs-collapsed-call-stack-details] summary {
+    display: flex;
+    align-items: center;
+    margin: var(--size-gap-double) 0;
+    list-style: none;
+  }
+  [data-nextjs-collapsed-call-stack-details] summary::-webkit-details-marker {
+    display: none;
+  }
+
+  [data-nextjs-collapsed-call-stack-details] h6 {
+    color: #666;
+  }
+  [data-nextjs-collapsed-call-stack-details] [data-nextjs-call-stack-frame] {
+    margin-bottom: var(--size-gap-double);
+  }
+
+        
+  .nextjs-container-build-error-version-status {
+    flex: 1;
+    text-align: right;
+  }
+  .nextjs-container-build-error-version-status small {
+    margin-left: var(--size-gap);
+    font-size: var(--size-font-small);
+  }
+  .nextjs-container-build-error-version-status a {
+    font-size: var(--size-font-small);
+  }
+  .nextjs-container-build-error-version-status span {
+    display: inline-block;
+    width: 10px;
+    height: 10px;
+    border-radius: 5px;
+    background: var(--color-ansi-bright-black);
+  }
+  .nextjs-container-build-error-version-status span.fresh {
+    background: var(--color-ansi-green);
+  }
+  .nextjs-container-build-error-version-status span.stale {
+    background: var(--color-ansi-yellow);
+  }
+  .nextjs-container-build-error-version-status span.outdated {
+    background: var(--color-ansi-red);
+  }
+
+      </style></template></nextjs-portal></body></html>
\ No newline at end of file
Index: public/Create Next App_files/layout.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/public/Create Next App_files/layout.css b/public/Create Next App_files/layout.css
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/public/Create Next App_files/layout.css	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,658 @@
+/*!***************************************************************************************************************************************************************************************************************************************************************!*\
+  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[12].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[12].use[3]!./src/app/globals.css ***!
+  \***************************************************************************************************************************************************************************************************************************************************************/
+/*
+! tailwindcss v3.3.2 | MIT License | https://tailwindcss.com
+*//*
+1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
+2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
+*/
+
+*,
+::before,
+::after {
+  box-sizing: border-box; /* 1 */
+  border-width: 0; /* 2 */
+  border-style: solid; /* 2 */
+  border-color: #e5e7eb; /* 2 */
+}
+
+::before,
+::after {
+  --tw-content: '';
+}
+
+/*
+1. Use a consistent sensible line-height in all browsers.
+2. Prevent adjustments of font size after orientation changes in iOS.
+3. Use a more readable tab size.
+4. Use the user's configured `sans` font-family by default.
+5. Use the user's configured `sans` font-feature-settings by default.
+6. Use the user's configured `sans` font-variation-settings by default.
+*/
+
+html {
+  line-height: 1.5; /* 1 */
+  -webkit-text-size-adjust: 100%; /* 2 */
+  -moz-tab-size: 4; /* 3 */
+  -o-tab-size: 4;
+     tab-size: 4; /* 3 */
+  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
+  font-feature-settings: normal; /* 5 */
+  font-variation-settings: normal; /* 6 */
+}
+
+/*
+1. Remove the margin in all browsers.
+2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
+*/
+
+body {
+  margin: 0; /* 1 */
+  line-height: inherit; /* 2 */
+}
+
+/*
+1. Add the correct height in Firefox.
+2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
+3. Ensure horizontal rules are visible by default.
+*/
+
+hr {
+  height: 0; /* 1 */
+  color: inherit; /* 2 */
+  border-top-width: 1px; /* 3 */
+}
+
+/*
+Add the correct text decoration in Chrome, Edge, and Safari.
+*/
+
+abbr:where([title]) {
+  -webkit-text-decoration: underline dotted;
+          text-decoration: underline dotted;
+}
+
+/*
+Remove the default font size and weight for headings.
+*/
+
+h1,
+h2,
+h3,
+h4,
+h5,
+h6 {
+  font-size: inherit;
+  font-weight: inherit;
+}
+
+/*
+Reset links to optimize for opt-in styling instead of opt-out.
+*/
+
+a {
+  color: inherit;
+  text-decoration: inherit;
+}
+
+/*
+Add the correct font weight in Edge and Safari.
+*/
+
+b,
+strong {
+  font-weight: bolder;
+}
+
+/*
+1. Use the user's configured `mono` font family by default.
+2. Correct the odd `em` font sizing in all browsers.
+*/
+
+code,
+kbd,
+samp,
+pre {
+  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
+  font-size: 1em; /* 2 */
+}
+
+/*
+Add the correct font size in all browsers.
+*/
+
+small {
+  font-size: 80%;
+}
+
+/*
+Prevent `sub` and `sup` elements from affecting the line height in all browsers.
+*/
+
+sub,
+sup {
+  font-size: 75%;
+  line-height: 0;
+  position: relative;
+  vertical-align: baseline;
+}
+
+sub {
+  bottom: -0.25em;
+}
+
+sup {
+  top: -0.5em;
+}
+
+/*
+1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
+2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
+3. Remove gaps between table borders by default.
+*/
+
+table {
+  text-indent: 0; /* 1 */
+  border-color: inherit; /* 2 */
+  border-collapse: collapse; /* 3 */
+}
+
+/*
+1. Change the font styles in all browsers.
+2. Remove the margin in Firefox and Safari.
+3. Remove default padding in all browsers.
+*/
+
+button,
+input,
+optgroup,
+select,
+textarea {
+  font-family: inherit; /* 1 */
+  font-size: 100%; /* 1 */
+  font-weight: inherit; /* 1 */
+  line-height: inherit; /* 1 */
+  color: inherit; /* 1 */
+  margin: 0; /* 2 */
+  padding: 0; /* 3 */
+}
+
+/*
+Remove the inheritance of text transform in Edge and Firefox.
+*/
+
+button,
+select {
+  text-transform: none;
+}
+
+/*
+1. Correct the inability to style clickable types in iOS and Safari.
+2. Remove default button styles.
+*/
+
+button,
+[type='button'],
+[type='reset'],
+[type='submit'] {
+  -webkit-appearance: button; /* 1 */
+  background-color: transparent; /* 2 */
+  background-image: none; /* 2 */
+}
+
+/*
+Use the modern Firefox focus style for all focusable elements.
+*/
+
+:-moz-focusring {
+  outline: auto;
+}
+
+/*
+Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
+*/
+
+:-moz-ui-invalid {
+  box-shadow: none;
+}
+
+/*
+Add the correct vertical alignment in Chrome and Firefox.
+*/
+
+progress {
+  vertical-align: baseline;
+}
+
+/*
+Correct the cursor style of increment and decrement buttons in Safari.
+*/
+
+::-webkit-inner-spin-button,
+::-webkit-outer-spin-button {
+  height: auto;
+}
+
+/*
+1. Correct the odd appearance in Chrome and Safari.
+2. Correct the outline style in Safari.
+*/
+
+[type='search'] {
+  -webkit-appearance: textfield; /* 1 */
+  outline-offset: -2px; /* 2 */
+}
+
+/*
+Remove the inner padding in Chrome and Safari on macOS.
+*/
+
+::-webkit-search-decoration {
+  -webkit-appearance: none;
+}
+
+/*
+1. Correct the inability to style clickable types in iOS and Safari.
+2. Change font properties to `inherit` in Safari.
+*/
+
+::-webkit-file-upload-button {
+  -webkit-appearance: button; /* 1 */
+  font: inherit; /* 2 */
+}
+
+/*
+Add the correct display in Chrome and Safari.
+*/
+
+summary {
+  display: list-item;
+}
+
+/*
+Removes the default spacing and border for appropriate elements.
+*/
+
+blockquote,
+dl,
+dd,
+h1,
+h2,
+h3,
+h4,
+h5,
+h6,
+hr,
+figure,
+p,
+pre {
+  margin: 0;
+}
+
+fieldset {
+  margin: 0;
+  padding: 0;
+}
+
+legend {
+  padding: 0;
+}
+
+ol,
+ul,
+menu {
+  list-style: none;
+  margin: 0;
+  padding: 0;
+}
+
+/*
+Prevent resizing textareas horizontally by default.
+*/
+
+textarea {
+  resize: vertical;
+}
+
+/*
+1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
+2. Set the default placeholder color to the user's configured gray 400 color.
+*/
+
+input::-moz-placeholder, textarea::-moz-placeholder {
+  opacity: 1; /* 1 */
+  color: #9ca3af; /* 2 */
+}
+
+input::placeholder,
+textarea::placeholder {
+  opacity: 1; /* 1 */
+  color: #9ca3af; /* 2 */
+}
+
+/*
+Set the default cursor for buttons.
+*/
+
+button,
+[role="button"] {
+  cursor: pointer;
+}
+
+/*
+Make sure disabled buttons don't get the pointer cursor.
+*/
+:disabled {
+  cursor: default;
+}
+
+/*
+1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
+2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
+   This can trigger a poorly considered lint error in some tools but is included by design.
+*/
+
+img,
+svg,
+video,
+canvas,
+audio,
+iframe,
+embed,
+object {
+  display: block; /* 1 */
+  vertical-align: middle; /* 2 */
+}
+
+/*
+Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
+*/
+
+img,
+video {
+  max-width: 100%;
+  height: auto;
+}
+
+/* Make elements with the HTML hidden attribute stay hidden by default */
+[hidden] {
+  display: none;
+}
+
+*, ::before, ::after {
+  --tw-border-spacing-x: 0;
+  --tw-border-spacing-y: 0;
+  --tw-translate-x: 0;
+  --tw-translate-y: 0;
+  --tw-rotate: 0;
+  --tw-skew-x: 0;
+  --tw-skew-y: 0;
+  --tw-scale-x: 1;
+  --tw-scale-y: 1;
+  --tw-pan-x:  ;
+  --tw-pan-y:  ;
+  --tw-pinch-zoom:  ;
+  --tw-scroll-snap-strictness: proximity;
+  --tw-gradient-from-position:  ;
+  --tw-gradient-via-position:  ;
+  --tw-gradient-to-position:  ;
+  --tw-ordinal:  ;
+  --tw-slashed-zero:  ;
+  --tw-numeric-figure:  ;
+  --tw-numeric-spacing:  ;
+  --tw-numeric-fraction:  ;
+  --tw-ring-inset:  ;
+  --tw-ring-offset-width: 0px;
+  --tw-ring-offset-color: #fff;
+  --tw-ring-color: rgb(59 130 246 / 0.5);
+  --tw-ring-offset-shadow: 0 0 #0000;
+  --tw-ring-shadow: 0 0 #0000;
+  --tw-shadow: 0 0 #0000;
+  --tw-shadow-colored: 0 0 #0000;
+  --tw-blur:  ;
+  --tw-brightness:  ;
+  --tw-contrast:  ;
+  --tw-grayscale:  ;
+  --tw-hue-rotate:  ;
+  --tw-invert:  ;
+  --tw-saturate:  ;
+  --tw-sepia:  ;
+  --tw-drop-shadow:  ;
+  --tw-backdrop-blur:  ;
+  --tw-backdrop-brightness:  ;
+  --tw-backdrop-contrast:  ;
+  --tw-backdrop-grayscale:  ;
+  --tw-backdrop-hue-rotate:  ;
+  --tw-backdrop-invert:  ;
+  --tw-backdrop-opacity:  ;
+  --tw-backdrop-saturate:  ;
+  --tw-backdrop-sepia:  ;
+}
+
+::backdrop {
+  --tw-border-spacing-x: 0;
+  --tw-border-spacing-y: 0;
+  --tw-translate-x: 0;
+  --tw-translate-y: 0;
+  --tw-rotate: 0;
+  --tw-skew-x: 0;
+  --tw-skew-y: 0;
+  --tw-scale-x: 1;
+  --tw-scale-y: 1;
+  --tw-pan-x:  ;
+  --tw-pan-y:  ;
+  --tw-pinch-zoom:  ;
+  --tw-scroll-snap-strictness: proximity;
+  --tw-gradient-from-position:  ;
+  --tw-gradient-via-position:  ;
+  --tw-gradient-to-position:  ;
+  --tw-ordinal:  ;
+  --tw-slashed-zero:  ;
+  --tw-numeric-figure:  ;
+  --tw-numeric-spacing:  ;
+  --tw-numeric-fraction:  ;
+  --tw-ring-inset:  ;
+  --tw-ring-offset-width: 0px;
+  --tw-ring-offset-color: #fff;
+  --tw-ring-color: rgb(59 130 246 / 0.5);
+  --tw-ring-offset-shadow: 0 0 #0000;
+  --tw-ring-shadow: 0 0 #0000;
+  --tw-shadow: 0 0 #0000;
+  --tw-shadow-colored: 0 0 #0000;
+  --tw-blur:  ;
+  --tw-brightness:  ;
+  --tw-contrast:  ;
+  --tw-grayscale:  ;
+  --tw-hue-rotate:  ;
+  --tw-invert:  ;
+  --tw-saturate:  ;
+  --tw-sepia:  ;
+  --tw-drop-shadow:  ;
+  --tw-backdrop-blur:  ;
+  --tw-backdrop-brightness:  ;
+  --tw-backdrop-contrast:  ;
+  --tw-backdrop-grayscale:  ;
+  --tw-backdrop-hue-rotate:  ;
+  --tw-backdrop-invert:  ;
+  --tw-backdrop-opacity:  ;
+  --tw-backdrop-saturate:  ;
+  --tw-backdrop-sepia:  ;
+}
+.\!container {
+  width: 100% !important;
+}
+.container {
+  width: 100%;
+}
+@media (min-width: 640px) {
+
+  .\!container {
+    max-width: 640px !important;
+  }
+
+  .container {
+    max-width: 640px;
+  }
+}
+@media (min-width: 768px) {
+
+  .\!container {
+    max-width: 768px !important;
+  }
+
+  .container {
+    max-width: 768px;
+  }
+}
+@media (min-width: 1024px) {
+
+  .\!container {
+    max-width: 1024px !important;
+  }
+
+  .container {
+    max-width: 1024px;
+  }
+}
+@media (min-width: 1280px) {
+
+  .\!container {
+    max-width: 1280px !important;
+  }
+
+  .container {
+    max-width: 1280px;
+  }
+}
+@media (min-width: 1536px) {
+
+  .\!container {
+    max-width: 1536px !important;
+  }
+
+  .container {
+    max-width: 1536px;
+  }
+}
+.visible {
+  visibility: visible;
+}
+.invisible {
+  visibility: hidden;
+}
+.collapse {
+  visibility: collapse;
+}
+.static {
+  position: static;
+}
+.fixed {
+  position: fixed;
+}
+.absolute {
+  position: absolute;
+}
+.relative {
+  position: relative;
+}
+.sticky {
+  position: sticky;
+}
+.block {
+  display: block;
+}
+.inline {
+  display: inline;
+}
+.flex {
+  display: flex;
+}
+.table {
+  display: table;
+}
+.grid {
+  display: grid;
+}
+.contents {
+  display: contents;
+}
+.hidden {
+  display: none;
+}
+.flex-shrink {
+  flex-shrink: 1;
+}
+.shrink {
+  flex-shrink: 1;
+}
+.grow {
+  flex-grow: 1;
+}
+.border-collapse {
+  border-collapse: collapse;
+}
+.transform {
+  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
+}
+.resize {
+  resize: both;
+}
+.border {
+  border-width: 1px;
+}
+.uppercase {
+  text-transform: uppercase;
+}
+.lowercase {
+  text-transform: lowercase;
+}
+.capitalize {
+  text-transform: capitalize;
+}
+.italic {
+  font-style: italic;
+}
+.underline {
+  text-decoration-line: underline;
+}
+.shadow {
+  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
+  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
+  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
+}
+.outline {
+  outline-style: solid;
+}
+.blur {
+  --tw-blur: blur(8px);
+  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
+}
+.filter {
+  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
+}
+.backdrop-filter {
+  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
+          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
+}
+.\!transition {
+  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter !important;
+  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter !important;
+  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter !important;
+  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
+  transition-duration: 150ms !important;
+}
+.transition {
+  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
+  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
+  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
+  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
+  transition-duration: 150ms;
+}
+.\[xlink\:href\] {
+  xlink: href;
+}
+
+@import url("https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap");
+@import url("https://fonts.googleapis.com/icon?family=Material+Icons");
+
Index: src/app/(store)/store.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/(store)/store.ts b/src/app/(store)/store.ts
--- a/src/app/(store)/store.ts	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/src/app/(store)/store.ts	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -3,6 +3,7 @@
 import {RowData} from './types'
 import { AccountsRequest } from "../api/type/accounts";
 import {getCurrentDate} from '../utils/dateUtil'
+import { AccountReportRequest } from '../api/type/accounts';
 
 interface AccountsState {
     rowData: RowData[]
@@ -78,4 +79,36 @@
 )
 
 
+
+interface AccountReportRequestState {
+    accountReportRequest: AccountReportRequest
+    setDateRange: (dateRange: string) => void
+    setAccountName: (accountName: string) => void
+}
+
+
+export const useAccountReportRequestStore = create<AccountReportRequestState>(
+    (set) => ({
+        accountReportRequest: { accountName: '', dt: parseInt(getCurrentDate()), recentDays: 1 },
+        setDateRange: (dateRange) => {
+            set((state) => {
+                return {
+                    accountReportRequest: {...state.accountReportRequest, recentDays: parseInt(dateRange)}
+                }
+            })
+        },
+        setAccountName: (accountName) => {
+            set((state) => {
+                return {
+                    accountReportRequest: {...state.accountReportRequest, accountName: accountName}
+                }
+            })
+        }
+    })
+)
+
+
+
+
+
 export default useAccountsStore;
\ No newline at end of file
Index: src/app/accounts/[account_name]/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/accounts/[account_name]/page.tsx b/src/app/accounts/[account_name]/page.tsx
--- a/src/app/accounts/[account_name]/page.tsx	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/src/app/accounts/[account_name]/page.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -4,16 +4,109 @@
 import Box from '@mui/material/Box';
 import AccountsDetailBreadcrumbs from '../../components/accountsDetial/AccountsDetailBreadcrumbs'
 import AccountCard from "@/app/components/accountsDetial/accountCard";
+import AllOverview from "@/app/components/accountsDetial/allOverview";
+import Datefilter from "@/app/components/accountsDetial/datefilter";
+import Dateperiod from "@/app/components/accounts/dateperiod";
+import KpiRattingCard from "@/app/components/accountsDetial/kpiRatting";
+import PostKpiCard from '@/app/components/accountsDetial/postKpiCard'
+import StreamingCard from "@/app/components/accountsDetial/streamingCard";
+import { useEffect, useState } from "react";
+import { usePathname } from "next/navigation";
+import { AccountDetailRequest,AccountDetailResponse,AccountReportRequest, AccountReportResponse } from "@/app/api/type/accounts";
+import { getCurrentDate } from "@/app/utils/dateUtil";
+import { useAccountReportRequestStore } from "@/app/(store)/store";
 
 export default function AccountDetialPage() {
+
+    const [ accountDetailResponse, setAccountDetailResponse] =  useState<AccountDetailResponse>()
+    const [ accountReportResponse, setAccountReportResponse] = useState<AccountReportResponse>()
+    // const accountReportRequest = useAccountReportRequestStore(state => state.accountReportRequest)
+    // const setAccountName = useAccountReportRequestStore(state => state.setAccountName)
+    
+    const pathName = usePathname();
+    const accountName = pathName.slice(pathName.lastIndexOf('/') + 1);
+    // setAccountName(accountName)
+
+    const accountDetailRequest:AccountDetailRequest={
+        accountName:accountName,
+        dt:parseInt(getCurrentDate()),
+        recentDays:-1
+    }
+
+    console.log("accountDetailRequest:",JSON.stringify(accountDetailRequest))
+    
+    useEffect(() => {
+        fetch("/api/accounts/accountDetails", {
+            method: "POST",
+            headers: {
+              "Content-Type": "application/json",
+            },
+            body: JSON.stringify({
+                accountDetailRequest
+            }),
+        }).then((res) => res.json())
+        .then((data) => (setAccountDetailResponse(data.data)))
+        .catch((err) => console.log(err));
+      }, []);
+
+      const accountReportRequest:AccountReportRequest={
+        accountName:accountName,
+        dt:parseInt(getCurrentDate()),
+        recentDays:-1
+    }
+
+    
+
+
+    useEffect(() => {
+    fetch("/api/accounts/accountReport", {
+        method: "POST",
+        headers: {
+            "Content-Type": "application/json",
+        },
+        body: JSON.stringify({
+            accountReportRequest
+        }),
+    }).then((res) => res.json())
+    .then((data) => (setAccountReportResponse(data.data)))
+    .catch((err) => console.log(err));
+    }, []);
+
+
+
     return (
         <>
             <CssBaseline />
             <Box sx={{ display:'flex', flexDirection:'column',width: 1}}>
                 <AccountsDetailBreadcrumbs/>
                 <Box sx={{ display:'flex', flexDirection:'row' }}>
-                    <Box sx={{ width:300 }}> <AccountCard/></Box>
-                    <Box> 我是右面卡片</Box>
+                    <Box sx={{ width:300 }}> <AccountCard data={accountDetailResponse}/></Box>
+                    <Box sx={{ flex: 1, display:'flex', flexDirection:'column'}}>
+                        <Box sx={{ weight:1, height:150 , display:'flex', justifyContent:'center', alignItems:'center'}}> 
+                            <AllOverview data={accountDetailResponse}/>
+                        </Box>
+                        <Box sx={{ flex:1 , display: 'flex', flexDirection:'column',justifyContent:'space-around',alignItems:'center' }}>
+                            <Box sx={{ display:'flex', flexDirection:'column',justifyContent:'center',alignItems:'center' }}>
+                                <Datefilter />
+                                <Box sx={{ width: 80, paddingTop:1, display:'flex', flexDirection:'row',justifyContent:'center',alignItems:'center' }}>
+                                    <Dateperiod />
+                                </Box>
+                            </Box>
+                            <KpiRattingCard data={accountReportResponse}/>
+                        </Box>
+                        <Box sx={{ height:200, display: 'flex', flexDirection:'column',justifyContent:'space-between' }}>
+                            <Box sx={{ display: 'flex',flexDirection:'row',justifyContent:'space-between' }}>
+                                <PostKpiCard data={accountReportResponse?.brandedVideoPosted} title='Branded video posted'/>
+                                <PostKpiCard data={accountReportResponse?.affilateVideoPosted} title='Affiliate video posted'/>
+                                <PostKpiCard data={accountReportResponse?.campaignAds}  title='CampaignAds'/>
+                            </Box>
+                            <Box sx={{ display: 'flex',flexDirection:'row',justifyContent:'space-between' }}>
+                                <StreamingCard title='Branded Live streaming' data={[accountReportResponse?.brandLiveStreamCnt,accountReportResponse?.brandLiveStreamDuration]}/>
+                                <StreamingCard title='Affiliate Live streaming' data={[accountReportResponse?.affilateLiveStreamCnt]}/>
+                            </Box>
+                        </Box>
+                        
+                    </Box>
                 </Box>
             </Box>
         </>
Index: src/app/accounts/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/accounts/page.tsx b/src/app/accounts/page.tsx
--- a/src/app/accounts/page.tsx	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/src/app/accounts/page.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -11,9 +11,9 @@
 import AccountsDataTable from '../components/accounts/accountsDataTable'
 import AccountsTotalTable from '../components/accounts/accountsTotalTable'
 import { useEffect,useState } from "react";
-import { AccountsRequest,AccountsResponse } from "../api/type/accounts";
-import {getCurrentDate} from '../utils/dateUtil'
 import {useAccountsRequestStore} from '@/app/(store)/store'
+import { AccountsRequest, AccountsResponse } from "@/app/api/type/accounts";
+
 
 
 
Index: src/app/api/accounts/accountDetails/route.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/api/accounts/accountDetails/route.ts b/src/app/api/accounts/accountDetails/route.ts
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/src/app/api/accounts/accountDetails/route.ts	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,105 @@
+import { NextRequest,NextResponse } from "next/server";
+import { AccountsDocument,AccountDetailResponse } from '../../type/accounts'
+import { Client} from "@elastic/elasticsearch";
+import { Result } from "postcss";
+
+
+const client = new Client({ node: 'http://34.66.66.126:9200' });
+export async function POST(req:Request) {
+    const {accountDetailRequest} =  await req.json();
+    // console.log(JSON.stringify(accountDetailRequest))
+    const {accountName,dt,recentDays} = accountDetailRequest
+    const searchBody = []
+    // build searchBody
+    if (accountName) {
+        searchBody.push({
+            match:{account_name:accountName}
+        })
+    } 
+    if (dt) {
+        searchBody.push({
+            match:{dt:dt}
+        })
+    }
+    if (recentDays) {
+        searchBody.push({
+            match:{recent_days:recentDays}
+        })
+    }
+    
+    // console.log(JSON.stringify(searchBody))
+    const result = await client.search<AccountsDocument>({
+        index: 'ads_account',
+        query: {
+            bool:{
+            must:searchBody
+            }
+        },
+        from:0,
+        size:10
+    })
+
+    const accountDetailResponseArray:AccountDetailResponse[] = result.hits.hits.map((hit)=>{
+        const accountDetailResponse:AccountDetailResponse = {
+            accountName:hit._source ? hit._source.account_name : '',
+            isBrand: hit._source ? hit._source.is_brand : false,
+            region: hit._source ? hit._source.account_region : '',
+            totalGmv: (hit._source ? parseInt(hit._source.account_video_gmv) : 0) + (hit._source ? parseInt(hit._source.account_livestream_gmv) : 0),
+            totalPostedVideo: hit._source ? hit._source.account_cnt_posted_video : 0,
+            totalLivestream: hit._source ? hit._source.account_cnt_livestream : 0,
+            totalFollower: hit._source ? hit._source.account_cnt_follower : 0,
+            totalAdsSpending: hit._source ? parseInt(hit._source.account_ads_spend) : 0,
+            roas: hit._source ? parseInt(hit._source.account_return_value) / parseInt(hit._source.account_ads_spend) : 0,
+            cir: hit._source ? hit._source.cir : 0,
+            todayGmv:0,
+            totalGPV:hit._source ? parseInt(hit._source.account_gpv) : 0,
+            todayGPV:0,
+            totalFollowers: hit._source ? hit._source.account_cnt_follower : 0,
+            todayFollowers:0,
+            totalProfile: hit._source ? hit._source.account_cnt_profile_visited : 0,
+            todayProfile:0
+        }
+        return  accountDetailResponse;
+    })
+
+    const accountDetailResponse = accountDetailResponseArray[0]
+    
+    const _searchBody = []
+    // build searchBody
+    if (accountName) {
+        _searchBody.push({
+            match:{account_name:accountName}
+        })
+    }
+
+    _searchBody.push({
+        match:{dt:dt}
+    })
+
+
+    _searchBody.push({
+        match:{recent_days:1}
+    })
+
+
+    const yesterdayResult = await client.search<AccountsDocument>({
+        index: 'ads_account',
+        query: {
+            bool:{
+            must:_searchBody
+            }
+        },
+        from:0,
+        size:10
+    })
+
+    const todayResult = yesterdayResult.hits.hits[0]._source;
+    accountDetailResponse.todayGmv = (todayResult ? parseInt(todayResult.account_video_gmv) : 0) + (todayResult ? parseInt(todayResult.account_livestream_gmv) : 0),
+    accountDetailResponse.todayGPV = todayResult ? parseInt(todayResult.account_gpv) : 0,
+    accountDetailResponse.todayFollowers = todayResult ? todayResult.account_cnt_follower : 0,
+    accountDetailResponse.todayProfile = todayResult ? todayResult.account_cnt_profile_visited : 0
+    
+    // console.log('accountDetailResponse:',JSON.stringify(accountDetailResponse))
+    return NextResponse.json({data:accountDetailResponse});
+    
+}
\ No newline at end of file
Index: src/app/api/accounts/accountReport/route.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/api/accounts/accountReport/route.ts b/src/app/api/accounts/accountReport/route.ts
new file mode 100644
--- /dev/null	(revision 8a050d7237235ba98db25ca77a1d0d472a42268d)
+++ b/src/app/api/accounts/accountReport/route.ts	(revision 8a050d7237235ba98db25ca77a1d0d472a42268d)
@@ -0,0 +1,156 @@
+import { NextRequest,NextResponse } from "next/server";
+import { AccountsDocument,AccountReportResponse } from '../../type/accounts'
+import { Client} from "@elastic/elasticsearch";
+
+const client = new Client({ node: 'http://34.66.66.126:9200' });
+export async function POST(req:Request) {
+    const {accountReportRequest} =  await req.json();
+    console.log(JSON.stringify(accountReportRequest))
+    const {accountName,dt,recentDays} = accountReportRequest
+    const searchBody = []
+    // build searchBody
+    if (accountName) {
+        searchBody.push({
+            match:{account_name:accountName}
+        })
+    } 
+    if (dt) {
+        searchBody.push({
+            match:{dt:dt}
+        })
+    }
+    if (recentDays) {
+        searchBody.push({
+            match:{recent_days:recentDays}
+        })
+    }
+    
+    // console.log(JSON.stringify(searchBody))
+    const result = await client.search<AccountsDocument>({
+        index: 'ads_account',
+        query: {
+            bool:{
+            must:searchBody
+            }
+        },
+        from:0,
+        size:10
+    })
+
+    const accountDetailResponseArray:AccountReportResponse[] = result.hits.hits.map((hit)=>{
+        const _accountReportResponse:AccountReportResponse = {
+            accountName:hit._source ? hit._source.account_name : '',
+            brandedVideo: hit._source ? parseInt(hit._source.account_video_gmv) : 0,
+            affilateVideo: 0,
+            adsVideo: hit._source ? parseInt(hit._source.account_return_value) : 0,
+            brandedLivestream: hit._source ? parseInt(hit._source.account_livestream_gmv) : 0,
+            affilateLivestream: 0,
+            brandedVideoPosted: hit._source ? hit._source.account_cnt_posted_video : 0,
+            todayBrandedVideoPosted: 0,
+            affilateVideoPosted: 0,
+            todayAffilateVideoPosted: 0,
+            campaignAds: hit._source ? parseInt(hit._source.account_ads_spend) : 0,
+            todayCampaignAds: 0,
+            brandLiveStreamCnt: hit._source ? hit._source.account_cnt_livestream : 0,
+            brandLiveStreamDuration: hit._source ? hit._source.account_livestream_duration : 0,
+            affilateLiveStreamCnt: 0
+        }
+        return  _accountReportResponse;
+    })
+
+    const accountReportResponse = accountDetailResponseArray[0]
+    
+    const _searchBody = []
+    // build searchBody
+    if (accountName) {
+        _searchBody.push({
+            match:{account_name:accountName}
+        })
+    }
+
+    _searchBody.push({
+        match:{dt:dt}
+    })
+
+
+    _searchBody.push({
+        match:{recent_days:7}
+    })
+
+
+    const yesterdayResult = await client.search<AccountsDocument>({
+        index: 'ads_account',
+        query: {
+            bool:{
+                must:_searchBody
+            }
+        },
+        from:0,
+        size:10
+    })
+
+    const todayResult = yesterdayResult.hits.hits[0]._source;
+    accountReportResponse.todayBrandedVideoPosted = todayResult ? todayResult.account_cnt_posted_video : 0;
+    accountReportResponse.todayCampaignAds = todayResult ? todayResult.account_cnt_ads_count : 0;
+
+    
+
+    const reportResult = await client.search<AccountsDocument>({
+        index: 'ads_account',
+        query: {
+            bool:{
+                must:[
+                    {
+                        match:{dt:dt}
+                    },
+                    {
+                        match:{recent_days:recentDays}
+                    }
+                ],
+                must_not:[
+                    {
+                        match:{account_name:accountName}
+                    },
+                    {
+                        term:{is_brand:true}
+                    }
+                ]
+            }
+        },
+        from:0,
+        size:10,
+        aggs:{
+            affilateVideo:{
+                sum:{
+                    field:'account_video_gmv'
+                }
+                    
+            },
+            affilateVideoPosted:{
+                sum:{
+                    field:'account_cnt_posted_video'
+                }
+                    
+            },
+            affilateLiveStreamCnt:{
+                sum:{
+                    field:'account_cnt_livestream'
+                }
+                    
+            }
+        }
+
+    })
+
+    // console.log(JSON.stringify(reportResult.aggregations.affilateVideo.value))
+    const affilateVide:any = reportResult.aggregations?.affilateVide
+    const affilateVideoPosted:any = reportResult.aggregations?.affilateVideoPosted
+    const affilateLiveStreamCnt:any = reportResult.aggregations?.affilateLiveStreamCnt
+    accountReportResponse.affilateVideo = reportResult.aggregations?.affilateVideo ? affilateVide.value: 0;
+    accountReportResponse.affilateVideoPosted = reportResult.aggregations?.affilateVideoPosted ? affilateVideoPosted.value  : 0;
+    accountReportResponse.affilateLiveStreamCnt = reportResult.aggregations?.affilateLiveStreamCnt ? affilateLiveStreamCnt.value  : 0;
+
+
+    return NextResponse.json({data:accountReportResponse});
+    
+}
Index: src/app/api/accounts/route.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/api/accounts/route.ts b/src/app/api/accounts/route.ts
--- a/src/app/api/accounts/route.ts	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/src/app/api/accounts/route.ts	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -1,36 +1,11 @@
 import { NextRequest, NextResponse } from "next/server";
 import { Client} from "@elastic/elasticsearch";
-import { AccountsRequest,AccountsResponse,AccountInfo,AccountsRow } from "../type/accounts";
+import { AccountsRequest,AccountsResponse,AccountInfo,AccountsRow,AccountsDocument } from "../type/accounts";
 
 
 const client = new Client({ node: 'http://34.66.66.126:9200' });
 
-interface AccountsDocument {
-    account_ads_spend: string;
-    account_avatar_image: string;
-    account_cnt_ads_click: number;
-    account_cnt_ads_count: number;
-    account_cnt_ads_gmv: number;
-    account_cnt_follower: number;
-    account_cnt_livestream: number;
-    account_cnt_posted_video: number;
-    account_cnt_profile_visited: number;
-    account_cnt_sales_orders: number;
-    account_cnt_video_views: number;
-    account_duration_livestream: number;
-    account_gpv: number;
-    account_id: string;
-    account_livestream_gmv: string;
-    account_name: string;
-    account_region: string;
-    account_return_value: number;
-    account_video_gmv: string;
-    brand_name: string;
-    cir: number;
-    dt: number;
-    is_brand: boolean;
-    recent_days: number;
-}
+
 
 export async function GET() {
     const result:any = await client.search<AccountsDocument>({
@@ -54,7 +29,7 @@
 
 export async function POST(req: Request) {
   const {accountsRequest} =  await req.json();
-  console.log(JSON.stringify(accountsRequest))
+  // console.log(JSON.stringify(accountsRequest))
   const searchBody = []
   // build searchBody
   if ('brand' in accountsRequest && accountsRequest.brand != 'ALL Brands') {
@@ -79,7 +54,7 @@
     })
 }
 
-  console.log(JSON.stringify(searchBody))
+  // console.log(JSON.stringify(searchBody))
   const result = await client.search<AccountsDocument>({
       index: 'ads_account',
       query: {
Index: src/app/api/type/accounts.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/api/type/accounts.ts b/src/app/api/type/accounts.ts
--- a/src/app/api/type/accounts.ts	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/src/app/api/type/accounts.ts	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -28,4 +28,84 @@
     total?: number;
     size?: number;
     page?: number;
+}
+
+
+export interface AccountsDocument {
+    account_ads_spend: string;
+    account_avatar_image: string;
+    account_cnt_ads_click: number;
+    account_cnt_ads_count: number;
+    account_cnt_ads_gmv: number;
+    account_cnt_follower: number;
+    account_cnt_livestream: number;
+    account_cnt_posted_video: number;
+    account_cnt_profile_visited: number;
+    account_cnt_sales_orders: number;
+    account_cnt_video_views: number;
+    account_duration_livestream: number;
+    account_gpv: string;
+    account_id: string;
+    account_livestream_gmv: string;
+    account_name: string;
+    account_region: string;
+    account_return_value: string;
+    account_video_gmv: string;
+    brand_name: string;
+    cir: number;
+    dt: number;
+    is_brand: boolean;
+    recent_days: number;
+    account_livestream_duration: number;
+}
+
+export interface AccountDetailRequest {
+    accountName: string;
+    dt: number;
+    recentDays: number;
+}
+
+export interface AccountDetailResponse {
+    accountName: string;
+    isBrand: boolean;
+    region: string;
+    totalGmv: number;
+    todayGmv: number;
+    totalPostedVideo: number;
+    totalLivestream: number;
+    totalFollower: number;
+    totalAdsSpending: number;
+    roas: number;
+    cir: number;
+    totalGPV: number;
+    todayGPV: number;
+    totalFollowers: number;
+    todayFollowers: number;
+    totalProfile: number;
+    todayProfile: number;
+}
+
+
+export interface AccountReportRequest {
+    accountName: string;
+    dt: number;
+    recentDays: number;
+}
+
+export interface AccountReportResponse {
+    accountName: string;
+    brandedVideo: number;
+    affilateVideo: number;
+    adsVideo: number;
+    brandedLivestream: number;
+    affilateLivestream: number;
+    brandedVideoPosted: number;
+    todayBrandedVideoPosted: number;
+    affilateVideoPosted: number;
+    todayAffilateVideoPosted: number;
+    campaignAds: number;
+    todayCampaignAds: number;
+    brandLiveStreamCnt: number;
+    brandLiveStreamDuration: number;
+    affilateLiveStreamCnt: number;
 }
\ No newline at end of file
Index: src/app/components/accounts/dateperiod.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/components/accounts/dateperiod.tsx b/src/app/components/accounts/dateperiod.tsx
--- a/src/app/components/accounts/dateperiod.tsx	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/src/app/components/accounts/dateperiod.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -3,7 +3,13 @@
 
 import FaceIcon from '@mui/icons-material/Face';
 
+
+
 export default function Dateperiod(){
+  
+
+
+
     return (
         <Chip icon={<FaceIcon />} label="date" />
     );
Index: src/app/components/accounts/tablecell/accountSummaryCell.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/components/accounts/tablecell/accountSummaryCell.tsx b/src/app/components/accounts/tablecell/accountSummaryCell.tsx
--- a/src/app/components/accounts/tablecell/accountSummaryCell.tsx	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/src/app/components/accounts/tablecell/accountSummaryCell.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -1,10 +1,5 @@
 import Box from '@mui/material/Box';
-import { Grid } from '@mui/material';
-import { styled } from "@mui/material/styles";
-import Paper from "@mui/material/Paper";
-import ImageList from '@mui/material/ImageList';
-import ImageListItem from '@mui/material/ImageListItem';
-import { DataGrid, GridColDef, GridRenderCellParams } from '@mui/x-data-grid';
+import { GridRenderCellParams } from '@mui/x-data-grid';
 import { AccountSummary }  from '../../../type/accounts-page'
 import Image from 'next/image';
 import AccountOfficial from '../../../icons/AccountOfficial.svg'
@@ -14,8 +9,6 @@
 
 export default function AccountSummaryCell(props: GridRenderCellParams<any, AccountSummary>) {
     const { value } = props;
-    // console.log(JSON.stringify(value))
-    // console.log(JSON.stringify(`${value?.img}`))
     return (
         // width 400
         <Box height={100} sx={{ display: 'flex', flexDirection: 'row',alignItems:"center" }}>
@@ -38,7 +31,7 @@
                 </Box>
             </Box>
             <Box>
-                <Link href='/accounts/1'>
+                <Link href={`/accounts/${value?.account_name}`}>
                     <DetailButton />
                 </Link>
             </Box>
Index: src/app/components/accountsDetial/AccountsDetailBreadcrumbs.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/components/accountsDetial/AccountsDetailBreadcrumbs.tsx b/src/app/components/accountsDetial/AccountsDetailBreadcrumbs.tsx
--- a/src/app/components/accountsDetial/AccountsDetailBreadcrumbs.tsx	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/src/app/components/accountsDetial/AccountsDetailBreadcrumbs.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -1,13 +1,13 @@
 import * as React from 'react';
 import Breadcrumbs from '@mui/material/Breadcrumbs';
 import { Box, Link } from '@mui/material';
-import { useRouter,usePathname, useSearchParams } from 'next/navigation';
+import { useRouter,usePathname } from 'next/navigation';
 
 
 export default function AccountsDetailBreadcrumbs() {
-    const router = useRouter();
-    function generateBreadcrumbs() {
-        const pathName =  usePathname();
+    const pathName =  usePathname();
+    function generateBreadcrumbs() {
+        
         console.log("pathName:",pathName);
         // Remove any query parameters, as those aren't included in breadcrumbs
 
Index: src/app/components/accountsDetial/accountCard.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/components/accountsDetial/accountCard.tsx b/src/app/components/accountsDetial/accountCard.tsx
--- a/src/app/components/accountsDetial/accountCard.tsx	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/src/app/components/accountsDetial/accountCard.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -1,22 +1,127 @@
-import { Box } from "@mui/material"
+import Box from '@mui/material/Box';
 import Divider from '@mui/material/Divider';
+import Image from "next/image";
+import AccountOfficial from "@/app/icons/AccountOfficial.svg";
+import { Typography } from '@mui/material';
+import { AccountDetailResponse } from '@/app/api/type/accounts';
+
 
-export default function AccountCard() {
+export default function AccountCard(props:{data:AccountDetailResponse | undefined }  ) {
+
+    const accountDetailResponse =  props.data
+
     return (
-        <Box sx={{ display:'flex', flexDirection:'column', justifyContent:'center', width:1 , height:600, borderBlock:'#000000', borderWidth:'2px' }}>
-            <Box sx={{ height:'30%',display:'flex', flexDirection:'column' ,justifyContent:'center', alignItems:'center' }}>
-                <Box>
-                    account info
-                </Box>
-                <Box>
-                    GMV info
+        <Box sx={{ display:'flex', flexDirection:'column', justifyContent:'center', width:1 , height:700, borderBlock:'#000000', borderWidth:'2px 2px' }}>
+            <Box sx={{ height:'25%', width:1,display:'flex', flexDirection:'column' ,justifyContent:'space-around', alignItems:'center' }}>
+                <Box sx={{ display:'flex' ,flexDirection:'row' , justifyContent:'space-around'}}>
+                    <Image
+                        width={48}
+                        height={48}
+                        src='/AccountLogo.png'
+                        alt='AccountOfficial'
+                        loading="lazy"
+                    />
+                    <Box sx={{ display:'flex', flexDirection:'column',alignItems:"center"}}>
+                        <Box sx={{ display: 'flex',flexDirection: 'row' ,justifyContent: "flex-start", alignItems:"center" }}>
+                         {accountDetailResponse?.accountName} &nbsp;
+                            <AccountOfficial />
+                        </Box>
+                        <Box sx={{ display: 'flex',flexDirection: 'row',justifyContent: "flex-start", alignItems:"center" }}>
+                            @ {accountDetailResponse?.accountName + ' ' + accountDetailResponse?.region}
+                        </Box>
+                    </Box>
+                </Box>
+                <Box sx={{ display:'flex', flexDirection:'column', alignItems:"center" }}>
+                    <Typography component='h6'><b>Total GMV</b></Typography>
+                    <Typography variant='h4'><b>€ {accountDetailResponse?.totalGmv}</b></Typography>
+                </Box>
+                <Box sx={{ display:'flex', flexDirection:'column', alignItems:"center" }}>
+                    <Typography component='h6' color={'grey'}>Account creation: 2021/11/8</Typography>
+                </Box>
+            </Box>
+            <Divider variant="middle" />
+            <Box sx={{ flex: 1, display:'flex', flexDirection:'column', justifyContent:'space-around'}}>
+                {
+                    /**
+                     * 1. 用于显示图表
+                     */
+                }
+                <Box sx={{display: 'flex',flexDirection: 'row' ,justifyContent: "space-between", alignItems:"center"}}>
+                    <Box sx={{ width:100 ,display: 'flex' , paddingLeft:2}}>
+                        <Typography component='h6' >Total Video Post</Typography>
+                    </Box>
+                    <Box sx={{ flex:1 ,display: 'flex' ,justifyContent:'center'}}>
+                        <Typography variant='h6' color={'blue'}>{accountDetailResponse?.totalPostedVideo}</Typography>
+                    </Box>
+                    <Box sx={{ width:100 ,display: 'flex',justifyContent:'center'}}>
+                        图表
+                    </Box>
+                </Box>
+                <Box sx={{display: 'flex',flexDirection: 'row' ,justifyContent: "space-between", alignItems:"center"}}>
+                    <Box sx={{ width:100 ,display: 'flex' , paddingLeft:2}}>
+                        <Typography component='h6' >Total Live Streaming</Typography>
+                    </Box>
+                    <Box sx={{ flex:1 ,display: 'flex' ,justifyContent:'center'}}>
+                        <Typography variant='h6' color={'blue'}>{accountDetailResponse?.totalLivestream}</Typography>
+                    </Box>
+                    <Box sx={{ width:100 ,display: 'flex',justifyContent:'center'}}>
+                        图表
+                    </Box>
+                </Box>
+                <Box sx={{display: 'flex',flexDirection: 'row' ,justifyContent: "space-between", alignItems:"center"}}>
+                    <Box sx={{ width:100 ,display: 'flex' , paddingLeft:2}}>
+                        <Typography component='h6' >Total Followers</Typography>
+                    </Box>
+                    <Box sx={{ flex:1 ,display: 'flex' ,justifyContent:'center'}}>
+                        <Typography variant='h6' color={'blue'}>{accountDetailResponse?.totalFollower}</Typography>
+                    </Box>
+                    <Box sx={{ width:100 ,display: 'flex',justifyContent:'center'}}>
+                        图表
+                    </Box>
+                </Box>
+            </Box>
+            <Divider variant="middle" />
+            <Box  sx={{ height:'40%' ,display:'flex', flexDirection:'column',  justifyContent:'space-between'}}>
+                <Box sx={{ display: 'flex', flexDirection:'row', height:64 }}>
+                    <Box sx={{ height:64, width:64, display:'flex',flexDirection:'row',justifyContent: "center", alignItems:"center" }}>
+                        <Image
+                            width={32}
+                            height={32}
+                            src='/ADS.png'
+                            alt='ADS'
+                            loading="lazy"
+                        />
+                    </Box>
+                
+                    <Box sx={{ display:'flex',flexDirection:'column',justifyContent:'space-around'}}>
+                        <Typography>Ads Spending</Typography>
+                        <Typography variant='h5'><b>€ {accountDetailResponse?.totalAdsSpending}</b></Typography>
+                    </Box>
+                </Box>
+                <Box sx={{flex:1,display:'flex',flexDirection:'column', justifyContent:'center',alignItems:"center" }}>
+                    <Box sx={{ background:'#F0F0FC' ,width:'90%', height:'90%', borderRadius:'10px', display:'flex',flexDirection:'column',justifyContent:'space-around',padding:2 }}>
+                        <Box>
+                            <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'space-between', }}>
+                                <Typography variant='h6'>ROAS</Typography>
+                                <Typography variant='h6'>€ {accountDetailResponse?.totalGmv}</Typography>
+                            </Box>
+                            <Box>
+                                <Typography variant='subtitle2' color={'grey'}>Return on Advertising Spend for the TikTok account</Typography>
+                            </Box>
+                        </Box>
+                        <Box>
+                            <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'space-between', }}>
+                                <Typography variant='h6'>GMV</Typography>
+                                <Typography variant='h6'>€ {accountDetailResponse?.cir}</Typography>
+                            </Box>
+                            <Box>
+                                <Typography variant='subtitle2' color={'grey'}>Return on Advertising Spend for the TikTok account</Typography>
+                            </Box>
+                        </Box>
+                    </Box>
+
                 </Box>
-                
             </Box>
-            <Divider variant="middle" />
-            <Box sx={{ flex: 1, display:'flex', justifyContent:'center'}}>我是中栏目</Box>
-            <Divider variant="middle" />
-            <Box  sx={{ height:'30%' ,display:'flex', justifyContent:'center'}}>我是下栏目</Box>
         </Box>
     )
 }
\ No newline at end of file
Index: src/app/components/accountsDetial/allOverview.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/components/accountsDetial/allOverview.tsx b/src/app/components/accountsDetial/allOverview.tsx
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/src/app/components/accountsDetial/allOverview.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,70 @@
+import { Box } from "@mui/material"
+import Typography from '@mui/material/Typography';
+import KpiCommentIcon from '@/app/icons/KpiComment.svg'
+import { AccountDetailRequest,AccountDetailResponse } from "@/app/api/type/accounts";
+
+export default function AllOverview(props:{data:AccountDetailResponse | undefined }){
+
+
+    const accountDetailResponse =  props.data
+
+    return(
+        <Box sx={{ width:'98%', height:1,paddingLeft:3, paddingRight:3,borderWidth: 1, borderRadius:'5px', borderColor:'grey', display:'flex', flexDirection:'row', justifyContent:'space-between',alignItems:'center'}}>
+            <Box sx={{ display:'flex', flexDirection:'column' ,alignItems:'center' }}>
+                <Typography variant="h4"><b>€ {accountDetailResponse?.totalGmv}</b></Typography>
+                <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'space-around',alignItems:'center'}}>
+                    <Typography variant="h6">Total GMV</Typography>
+                    &nbsp;
+                    <KpiCommentIcon/>
+                </Box>
+                <Box sx={{ display:'flex' , flexDirection:'row'}}>
+                    <Typography variant="subtitle1" color='grey'>Yesterday</Typography>
+                    &nbsp;
+                    <Typography variant="subtitle1" color='red'>+{accountDetailResponse?.todayGmv}</Typography>
+                </Box>
+            </Box>
+            <Box sx={{ display:'flex', flexDirection:'column' ,alignItems:'center' }}>
+                <Typography variant="h4"><b>€ {accountDetailResponse?.totalGPV}</b></Typography>
+                <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'space-around',alignItems:'center'}}>
+                    <Typography variant="h6">Total GPV</Typography>
+                    &nbsp;
+                    <KpiCommentIcon/>
+                </Box>
+                <Box sx={{ display:'flex' , flexDirection:'row'}}>
+                    <Typography variant="subtitle1" color='grey'>Yesterday</Typography>
+                    &nbsp;
+                    <Typography variant="subtitle1" color='red'>+{accountDetailResponse?.todayGPV}</Typography>
+                </Box>
+            </Box>
+
+            <Box sx={{ display:'flex', flexDirection:'column' ,alignItems:'center' }}>
+                <Typography variant="h4"><b> {accountDetailResponse?.totalFollower}</b></Typography>
+                <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'space-around',alignItems:'center'}}>
+                    <Typography variant="h6">Total Followers</Typography>
+                    &nbsp;
+                    <KpiCommentIcon/>
+                </Box>
+                <Box sx={{ display:'flex' , flexDirection:'row'}}>
+                    <Typography variant="subtitle1" color='grey'>Yesterday</Typography>
+                    &nbsp;
+                    <Typography variant="subtitle1" color='red'>+{accountDetailResponse?.todayFollowers}</Typography>
+                </Box>
+            </Box>
+
+            <Box sx={{ display:'flex', flexDirection:'column' ,alignItems:'center' }}>
+                <Typography variant="h4"><b> {accountDetailResponse?.totalProfile}</b></Typography>
+                <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'space-around',alignItems:'center'}}>
+                    <Typography variant="h6">Total Profile visit</Typography>
+                    &nbsp;
+                    <KpiCommentIcon/>
+                </Box>
+                <Box sx={{ display:'flex' , flexDirection:'row'}}>
+                    <Typography variant="subtitle1" color='grey'>Yesterday</Typography>
+                    &nbsp;
+                    <Typography variant="subtitle1" color='red'>+{accountDetailResponse?.todayFollowers}</Typography>
+                </Box>
+            </Box>
+
+        </Box>
+    )
+}
\ No newline at end of file
Index: src/app/components/accountsDetial/datefilter.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/components/accountsDetial/datefilter.tsx b/src/app/components/accountsDetial/datefilter.tsx
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/src/app/components/accountsDetial/datefilter.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,77 @@
+import * as React from 'react';
+import Stack from '@mui/material/Stack';
+import ToggleButtonGroup from '@mui/material/ToggleButtonGroup';
+import MuiToggleButton from '@mui/material/ToggleButton';
+import { styled } from '@mui/material/styles';
+
+import {useAccountReportRequestStore} from '@/app/(store)/store'
+
+const ToggleButton = styled(MuiToggleButton)<{ selectedColor: string }>(({ selectedColor }) => ({
+    '&.Mui-selected, &.Mui-selected:hover': {
+      color: 'white',
+      backgroundColor: selectedColor,
+    },
+  }));
+
+
+export default function Datefilter() {
+
+
+    const options = ['Today', 'Last 7 days', 'Month','Quarter', '1 Year', 'ALL']
+
+    const optionsMap = new Map<string,string>();
+    // const optionsMap = { 'Day': '1', 'Week': '7' ,'Month':'30','Year':'365','ALL':'-1'}
+    optionsMap.set('Today','1')
+    optionsMap.set('Last 7 days','7')
+    optionsMap.set('Month','30')
+    optionsMap.set('Quarter','90')
+    optionsMap.set('Year','365')
+    optionsMap.set('ALL','-1')
+
+    const [alignment, setAlignment] = React.useState('Today');
+
+    const dateRange = useAccountReportRequestStore(state => state.accountReportRequest.recentDays)
+    const setDateRange = useAccountReportRequestStore(state => state.setDateRange)
+
+    const handleChange = (
+        event: React.MouseEvent<HTMLElement>,
+        newAlignment: string,
+    ) => {
+        setAlignment(newAlignment);
+        setDateRange(optionsMap.get(newAlignment)!)
+    };
+
+    const control = {
+        value: alignment,
+        onChange: handleChange,
+        exclusive: true,
+
+    };
+
+    
+    return (
+        <Stack spacing={4} alignItems="center">
+            <ToggleButtonGroup size="small" {...control} aria-label="Small sizes">
+                {
+                    options.map((option,index) => (
+                        <ToggleButton value={option} key={index} sx={{width:150,color:'#0000FF',borderColor:'#0000FF',borderWidth:'2px'}} selectedColor="#0000FF">
+                            <b>{option}</b>
+                        </ToggleButton>
+                    ))
+                }
+                {/* <ToggleButton value="Week" key="Week" sx={{width:80,color:'#0000FF'}} selectedColor="#0000FF">
+                <b>Week</b>
+                </ToggleButton>
+                <ToggleButton value="Month" key="Month" sx={{width:80,color:'#0000FF'}} selectedColor="#0000FF">
+                <b> Month</b>
+                </ToggleButton>
+                <ToggleButton value="Year" key="Year" sx={{width:80,color:'#0000FF'}} selectedColor="#0000FF">
+                <b> Year</b>
+                </ToggleButton>
+                <ToggleButton value="ALL" key="ALL" sx={{width:80,color:'#0000FF'}} selectedColor="#0000FF">
+                <b> ALL</b>
+                </ToggleButton> */}
+            </ToggleButtonGroup>
+        </Stack>
+    );   
+}
\ No newline at end of file
Index: src/app/components/accountsDetial/kpiRatting.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/components/accountsDetial/kpiRatting.tsx b/src/app/components/accountsDetial/kpiRatting.tsx
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/src/app/components/accountsDetial/kpiRatting.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,121 @@
+import { Box,Typography } from "@mui/material"
+import CircleIcon from '@mui/icons-material/Circle';
+import Divider from '@mui/material/Divider';
+import { AccountReportResponse } from "@/app/api/type/accounts";
+
+export default function KpiRattingCard(props:{data:AccountReportResponse | undefined }) {
+    const accountReportResponse =  props.data
+
+    const total = (accountReportResponse?.brandedVideo ? accountReportResponse?.brandedVideo : 0 )
+                + (accountReportResponse?.affilateVideo ? accountReportResponse?.affilateVideo : 0)
+                + (accountReportResponse?.adsVideo ? accountReportResponse?.adsVideo :0)
+                + (accountReportResponse?.brandedLivestream ? accountReportResponse?.brandedLivestream : 0)
+                + (accountReportResponse?.affilateLivestream ?  accountReportResponse?.affilateLivestream : 0)
+
+    const brandedVideoRate = (accountReportResponse?.brandedVideo ? accountReportResponse?.brandedVideo : 0 ) / total * 100
+    const affilateVideoRate = (accountReportResponse?.affilateVideo ? accountReportResponse?.affilateVideo : 0) / total * 100
+    const adsVideoRate = (accountReportResponse?.adsVideo ? accountReportResponse?.adsVideo :0) / total * 100
+    const brandedLivestreamRate = (accountReportResponse?.brandedLivestream ? accountReportResponse?.brandedLivestream : 0) / total * 100
+    const affilateLivestreamRate = (accountReportResponse?.affilateLivestream ?  accountReportResponse?.affilateLivestream : 0) / total * 100
+
+
+    return(
+        <Box sx={{ width:1, display:'flex', flexDirection:'column', justifyContent:'space-between', alignItems:'stretch'}}>
+        <Box sx={{ borderWidth: 1, borderRadius:'5px', borderColor:'grey', width:1,height:150, display:'flex',flexDirection:'row',alignItems:'center' }}>
+            {/* 最左边的图标 + 指标 */}
+            <Box sx={{ display:'flex',flexDirection:'row' }}>
+                <Box sx={{ width:150, display:'flex', justifyContent:'center', alignItems:'center' }}>
+                    图表
+                </Box>
+                <Box sx={{ display:'flex', flexDirection:'column',width:100 }}> 
+                    <Typography component='h1'>GMV Contribution Source</Typography>
+                    <Typography variant='h5' color={'blue'}><b>€ {total}</b></Typography>
+                </Box>
+            </Box>
+            {/* kpi 指标 */}
+            <Box sx={{ paddingLeft:2, flex:1, display:'flex', flexDirection:'row',justifyContent:'space-around'}}>
+                <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'start'  }}>
+                    <Box sx={{paddingTop:0.75, display:'flex', flexDirection:'row',justifyContent:'space-between'}}>
+                        <CircleIcon sx={{ width:'10px', height:'10px' }}/> &nbsp; 
+                    </Box>
+                    <Box sx={{ display:'flex', flexDirection:'column',justifyContent:'start'}}>
+                        <Typography component='h6'>Branded Video</Typography>
+                        <Typography variant='h5'>{brandedVideoRate.toPrecision(2)}%</Typography>
+                        <Typography variant='subtitle1' color='grey'>{accountReportResponse?.brandedVideo}</Typography>
+                    </Box>
+                    {/* <Box sx={{ paddingLeft:1,paddingRight:1}}>
+                        <Divider orientation="vertical"/>
+                    </Box> */}
+                </Box>
+                <Divider orientation="vertical" flexItem/>
+                <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'start'  }}>
+                    <Box sx={{paddingTop:0.75, display:'flex', flexDirection:'row',justifyContent:'space-between'}}>
+                        <CircleIcon sx={{ width:'10px', height:'10px' }}/> &nbsp; 
+                    </Box>
+                    <Box sx={{ display:'flex', flexDirection:'column',justifyContent:'start'}}>
+                        <Typography component='h6'>Affilate Video</Typography>
+                        <Typography variant='h5'>{affilateVideoRate.toPrecision(2)}%</Typography>
+                        <Typography variant='subtitle1' color='grey'>{accountReportResponse?.affilateVideo}</Typography>
+                    </Box>
+                    {/* <Box sx={{ paddingLeft:1,paddingRight:1}}>
+                        <Divider orientation="vertical"/>
+                    </Box> */}
+                </Box>
+                <Divider orientation="vertical" flexItem/>
+                <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'start'  }}>
+                    <Box sx={{paddingTop:0.75, display:'flex', flexDirection:'row',justifyContent:'space-between'}}>
+                        <CircleIcon sx={{ width:'10px', height:'10px' }}/> &nbsp; 
+                    </Box>
+                    <Box sx={{ display:'flex', flexDirection:'column',justifyContent:'start'}}>
+                        <Typography component='h6'>Ads Video</Typography>
+                        <Typography variant='h5'>{adsVideoRate.toPrecision(2)}%</Typography>
+                        <Typography variant='subtitle1' color='grey'>{accountReportResponse?.adsVideo}</Typography>
+                    </Box>
+                    {/* <Box sx={{ paddingLeft:1,paddingRight:1}}>
+                        <Divider orientation="vertical"/>
+                    </Box> */}
+                </Box>
+                <Divider orientation="vertical" flexItem/>
+                <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'start'  }}>
+                    <Box sx={{paddingTop:0.75, display:'flex', flexDirection:'row',justifyContent:'space-between'}}>
+                        <CircleIcon sx={{ width:'10px', height:'10px' }}/> &nbsp; 
+                    </Box>
+                    <Box sx={{ display:'flex', flexDirection:'column',justifyContent:'start'}}>
+                        <Typography component='h6'>Branded Live Streaming</Typography>
+                        <Typography variant='h5'>{brandedLivestreamRate.toPrecision(2)}%</Typography>
+                        <Typography variant='subtitle1' color='grey'>{accountReportResponse?.brandedLivestream}</Typography>
+                    </Box>
+                    {/* <Box sx={{ paddingLeft:1,paddingRight:1}}>
+                        <Divider orientation="vertical"/>
+                    </Box> */}
+                </Box>
+                <Divider orientation="vertical" flexItem/>
+                <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'start'  }}>
+                    <Box sx={{paddingTop:0.75, display:'flex', flexDirection:'row',justifyContent:'space-between'}}>
+                        <CircleIcon sx={{ width:'10px', height:'10px' }}/> &nbsp; 
+                    </Box>
+                    <Box sx={{ display:'flex', flexDirection:'column',justifyContent:'start'}}>
+                        <Typography component='h6'>Affiliate Live Streaming</Typography>
+                        <Typography variant='h5'>{affilateLivestreamRate.toPrecision(2)}%</Typography>
+                        <Typography variant='subtitle1' color='grey'>{accountReportResponse?.affilateLivestream}</Typography>
+                    </Box>
+                    {/* <Box sx={{ paddingLeft:1,paddingRight:1}}>
+                        <Divider orientation="vertical"/>
+                    </Box> */}
+                </Box>
+                <Divider orientation="vertical" flexItem/>
+                <Box sx={{ display:'flex', flexDirection:'row', justifyContent:'start'  }}>
+                    <Box sx={{paddingTop:0.75, display:'flex', flexDirection:'row',justifyContent:'space-between'}}>
+                        <CircleIcon sx={{ width:'10px', height:'10px' }}/> &nbsp; 
+                    </Box>
+                    <Box sx={{ display:'flex', flexDirection:'column',justifyContent:'start'}}>
+                        <Typography component='h6'>Orther</Typography>
+                        <Typography variant='h5'>0%</Typography>
+                        <Typography variant='subtitle1' color='grey'>0%</Typography>
+                    </Box>
+                </Box>
+            </Box>
+        </Box>
+    </Box>
+    )
+}
\ No newline at end of file
Index: src/app/components/accountsDetial/postKpiCard.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/components/accountsDetial/postKpiCard.tsx b/src/app/components/accountsDetial/postKpiCard.tsx
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/src/app/components/accountsDetial/postKpiCard.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,26 @@
+import { Box,Typography } from "@mui/material"
+import PostKpiCardIcon from '@/app/icons/PostKpiCardDetail.svg'
+
+
+export default function PostKpiCard(props:{data:number|undefined, title:string }) {
+    const { data, title } = props
+
+    return (
+        <Box sx={{ width:420,height:80, display:'flex',flexDirection:'row', justifyContent:'space-between', alignItems:'center' ,borderWidth: '1px', paddingRight:2}}>
+            <Box sx={{ width:100,display:'flex',justifyContent:'center' ,alignItems:'center'}}>
+                图片
+            </Box>
+            <Box sx={{flex:1, display:'flex' , flexDirection:'column'}}>
+                <Typography variant='h6'>{title}</Typography>
+                <Box sx={{ display:'flex', flexDirection:'row'}}>
+                    <Typography variant="subtitle1">Vs last days</Typography>
+                    <Typography variant="subtitle1" color={'red'}>+ 4</Typography>
+                </Box>
+            </Box>
+            <Box sx={{width:100, display:'flex' , flexDirection:'row',justifyContent:'space-around',alignItems:'center'}}>
+                <Typography variant="h4">{data}</Typography>
+                <PostKpiCardIcon />
+            </Box>
+        </Box>
+    )
+}
\ No newline at end of file
Index: src/app/components/accountsDetial/streamingCard.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/components/accountsDetial/streamingCard.tsx b/src/app/components/accountsDetial/streamingCard.tsx
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/src/app/components/accountsDetial/streamingCard.tsx	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,27 @@
+import { Box,Typography } from "@mui/material"
+import PostKpiCardIcon from '@/app/icons/PostKpiCardDetail.svg'
+
+
+
+
+
+export default function StreamingCard(props:{data:any[], title:string }) {
+    const { data, title } = props
+
+    return (
+        <Box sx={{ width:420,height:80, display:'flex',flexDirection:'row', justifyContent:'space-between', alignItems:'center' ,borderWidth: '1px', paddingRight:2}}>
+            <Box sx={{ width:100,display:'flex',justifyContent:'center' ,alignItems:'center'}}>
+                图片
+            </Box>
+            <Box sx={{flex:1, display:'flex' , flexDirection:'column'}}>
+                <Typography variant='h6'>{title}</Typography>
+                <Box sx={{ display:'flex', flexDirection:'row'}}>
+                    <Typography variant="h5">{data[0]} Sessions</Typography>
+                </Box>
+            </Box>
+            <Box sx={{width:80, display:'flex' , flexDirection:'row',justifyContent:'space-around',alignItems:'center'}}>
+                <PostKpiCardIcon />
+            </Box>
+        </Box>
+    )
+}
\ No newline at end of file
Index: src/app/icons/PostKpiCardDetail.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/icons/PostKpiCardDetail.svg b/src/app/icons/PostKpiCardDetail.svg
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/src/app/icons/PostKpiCardDetail.svg	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,3 @@
+<svg width="12" height="18" viewBox="0 0 12 18" fill="none" xmlns="http://www.w3.org/2000/svg">
+<path d="M6.34355 8.99967L0.685547 3.34367L3.51355 0.513672L11.9995 8.99967L3.51355 17.4857L0.685547 14.6557L6.34355 8.99967Z" fill="#6E7191"/>
+</svg>
Index: src/app/icons/kpiComment.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/icons/kpiComment.svg b/src/app/icons/kpiComment.svg
new file mode 100644
--- /dev/null	(revision e8067cf645888d1b7401646ee039ba880271875f)
+++ b/src/app/icons/kpiComment.svg	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -0,0 +1,4 @@
+<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
+<circle cx="8" cy="8" r="7.5" fill="#FCFCFC" stroke="#610BEF"/>
+<path d="M7.51903 10.063C7.5155 9.93427 7.51374 9.83769 7.51374 9.77331C7.51374 9.39414 7.5666 9.06685 7.6723 8.79142C7.74982 8.58395 7.87491 8.37469 8.04757 8.16365C8.17442 8.00984 8.40169 7.78627 8.72939 7.49296C9.06061 7.19607 9.27555 6.95998 9.37421 6.78471C9.47287 6.60943 9.5222 6.41806 9.5222 6.2106C9.5222 5.83501 9.37773 5.50592 9.08879 5.22334C8.79986 4.93718 8.44574 4.7941 8.02643 4.7941C7.62121 4.7941 7.28295 4.92287 7.01163 5.18042C6.74031 5.43796 6.56237 5.84038 6.4778 6.38766L5.5 6.26962C5.58809 5.53633 5.84884 4.97474 6.28224 4.58484C6.71917 4.19495 7.29528 4 8.01057 4C8.76815 4 9.37245 4.20926 9.82347 4.62777C10.2745 5.04628 10.5 5.55243 10.5 6.14621C10.5 6.4896 10.4207 6.80617 10.2622 7.09591C10.1036 7.38565 9.79352 7.73798 9.33192 8.15292C9.02185 8.43192 8.81924 8.6376 8.7241 8.76995C8.62896 8.9023 8.55849 9.05433 8.51268 9.22602C8.46688 9.39772 8.44045 9.67673 8.4334 10.063H7.51903ZM7.46089 12V10.9001H8.5444V12H7.46089Z" fill="#610BEF"/>
+</svg>
Index: tsconfig.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tsconfig.json b/tsconfig.json
--- a/tsconfig.json	(revision 958447a2c6c8bf18787b52550830a0304ae1ecfc)
+++ b/tsconfig.json	(revision e8067cf645888d1b7401646ee039ba880271875f)
@@ -23,6 +23,6 @@
       "@/*": ["./src/*"]
     }
   },
-  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts","**/**/*.ts","**/**/*.tsx" ,"**/**/**/*.ts","**/**/**/*.tsx"],
+  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts","**/**/*.ts","**/**/*.tsx" ,"**/**/**/*.ts","**/**/**/*.tsx","**/**/**/**/*.ts"],
   "exclude": ["node_modules"]
 }
diff --git a/public/ADS.png b/public/ADS.png
new file mode 100644
index 0000000000000000000000000000000000000000..a85b08b559d08c1c417647e686b3c5dddf1ef231
GIT binary patch
literal 587
zc$@)C0<`^!P)<h;3K|Lk000e1NJLTq000{R000~a1^@s6kkQ2L00009a7bBm000XU
z000XU0RWnu7ytkO0drDELIAGL9O(c600d`2O+f$vv5yP<VFdsH0pLkQK~#7F?N-rE
z!!Qti2Sxo26A&hV5jsLQpiDsdqwo<U)CTbbOwcj`Y(Pg~1HuG^&k8livzxR<q-j&N
zMM6BuiG8;G?(FBYfek|J#~AghRd`qv1_Q*#NGxGn8*F#6W~kt_!q{q1*Y2^rVbxIh
z<Tw(=L1k>*!ey%^5mt;aR38bBMid*w-zBTe8*tOs!y!-~eB#c^H?xOVTBECe)~4EG
z5xf-b``pNef?NKA>JFOUI=0c^w@ZS6hxL|fd!!IvDTrVxGN&Zv(SSSsCpkl+vvb)$
zyO3SZv`?~o7UQBWOC||2FOPW?y;+l3*yS4xVdzxMS?i_AxDPchQ@?c~JvYfVf}-(m
zPe*%qP>Rf@F`oWJ8BtriRseQMZ5~CThwxPKQHso_7&k!RiH$Hd{}9R)IvuUs<!1FM
zuRmA%X^N?_+M@uDGy8Q%U+K9OiW&LiqBd#w9u;ZHB8Jdkn2bct^#3qz=JMEfkO?J?
zB1nm27g0fu%_XBCELk(hZnCI|K1%~7@Slj6Mv_dP8<Rat@EmqD!iqtK9_pA(T#DIa
z-A~Jk*_cs)7bb;EY!Wi7BYk!GD38eIQY=d5-jO?a$CBVhyE}c+7Ltt#mw32l4^sR#
Zz5s!gs)DsXR+|6-002ovPDHLkV1h!6{uBTJ

